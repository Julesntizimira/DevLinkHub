"""Create a baseline migrations

Revision ID: 9e507a7d7ef2
Revises: 3e80bacefc53
Create Date: 2024-03-22 08:52:03.149790

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9e507a7d7ef2'
down_revision: Union[str, None] = '3e80bacefc53'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Check if the profile_id column doesn't already exist
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    if not inspector.has_column('projects', 'profile_id'):
        op.add_column('projects', sa.Column('profile_id', sa.String(length=60), nullable=True))

    # Specify a name for the foreign key constraint
    op.drop_constraint('fk_projects_user_id', 'projects', type_='foreignkey')
    op.create_foreign_key('fk_projects_profile_id', 'projects', 'profiles', ['profile_id'], ['id'])

    # Drop the user_id column from projects if it exists
    if inspector.has_column('projects', 'user_id'):
        op.drop_column('projects', 'user_id')


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('projects', sa.Column('user_id', sa.VARCHAR(length=60), nullable=True))
    op.drop_constraint(None, 'projects', type_='foreignkey')
    op.create_foreign_key(None, 'projects', 'users', ['user_id'], ['id'])
    op.drop_column('projects', 'profile_id')
    # ### end Alembic commands ###
